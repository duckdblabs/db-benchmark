name: Publish report
on:
  workflow_dispatch:
    inputs:
      instance_id:
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/master' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  gh_issue_repo: duckdblabs/db-benchmark
  instance_id: ${{ inputs.instance_id }}
  solutions: ${{ inputs.solutions }}


jobs:
  start-aws-machine:
    name: Start aws-small-machine
    runs-on: ubuntu-latest
    environment: aws-secrets
    steps:
      - name: Start EC2 runner
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1
        run: aws ec2 start-instances --instance-id ${{ env.instance_id }}

      - name: Create issue if failure
        shell: bash
        if: ${{ failure() && contains(github.ref_name, 'main') }}
        run: |
          gh issue create --repo ${{ env.gh_issue_repo }} --title "Could not start DB-benchmark machine" --body "AWS box with instance-id ${{ env.instance_id }} could not be started"

  run-benchmark:
    name: Generate Assets
    env:
      CC: gcc-10
      CXX: g++-10
      GEN: ninja
    runs-on: self-hosted
    environment: aws-secrets
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      pull-requests: write      # 'write' access to pull requests
    steps:
      - uses: actions/checkout@v4

      - name: run mount
        shell: bash
        run: |
          ./_setup_utils/mount.sh

      - name: Setup git commit
        shell: bash
        working-directory: /var/lib/mount/db-benchmark-metal
        run: |
          git config --global user.email ""
          git config --global user.name "Publish report action"

      - name: Download the data
        shell: bash
        working-directory: /var/lib/mount/db-benchmark-metal
        env:
          DO_REPORT: 1
          DO_PUBLISH: 1
        run: |
          ./_run/download_small_medium.sh
          ./_run/download_large_data.sh
          ./_run/generate_report.sh
          ./report/publish.sh

      # if something doesn't work, upload the assets
      - name: Create Archive
        if: always()
        shell: bash
        working-directory: /var/lib/mount/db-benchmark-metal
        run: |
          mkdir -p out
          echo "guarantee not empty dir" > out/guarantee.txt
          zip -r out-dir.zip out/ public/

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: out-dir.zip
          path: /var/lib/mount/db-benchmark-metal/out-dir.zip
          if-no-files-found: error

  shutdown:
    name: shut down
    environment: aws-secrets
    if: always()
    runs-on: ubuntu-latest
    needs:
      - start-aws-machine
      - run-benchmark

    steps:
      - name: shutdown
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: aws ec2 stop-instances --instance-id ${{ env.instance_id }}

